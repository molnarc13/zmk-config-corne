/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  |  "   |
// |  `   |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// |  =   |  X  |  C  |  D  |  V  |  Z  |   |  K  |  H   |  ,  |  .  |  /  |  +   |
//                    | RET | LWR | SPC |   | BKSP| RSE  | TAB |
                        bindings = <
   &kp TILDE &kp Q       &kp W       &kp F      &kp P      &kp B        &kp J &kp L      &kp U      &kp Y       &kp SEMI    &kp DQT
   &kp GRAVE &mt LSHFT A &mt LCTRL R &mt LALT S &mt LGUI T &kp G        &kp M &mt RGUI N &mt RALT E &mt RCTRL I &mt RSHFT O &kp SQT
   &kp EQUAL &kp X       &kp C       &kp D      &kp V      &kp Z        &kp K &kp H      &kp COMMA  &kp DOT     &kp FSLH    &kp PLUS
                                &kp RET       &mo 1        &kp SPACE    &kp BSPC     &mo 2       &kp TAB
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  -  |   |  _  |  %  |  ^  |  &  |  *  |  "   |
// |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  '   |
// |  =   |  "  |  '  |  {  |  (  |  [  |   |  ]  |  )  |  }  |  |  |  \  |  +   |
//                    | RET |     | SPC |   | BSPC|     | TAB |
                        bindings = <
   &kp TILDE &kp EXCL &kp AT  &kp HASH &kp DLLR &kp MINUS    &kp UNDER &kp PRCNT &kp CARET &kp AMPS &kp ASTRK &kp DQT
   &kp GRAVE &kp N1   &kp N2  &kp N3   &kp N4   &kp N5       &kp N6    &kp N7    &kp N7    &kp N9   &kp N0    &kp SQT
   &kp EQUAL &kp DQT  &kp SQT &kp LBRC &kp LPAR &kp LBKT     &kp RBKT  &kp RPAR  &kp RBRC  &kp PIPE &kp BSLH  &kp PLUS
                         &kp RET     &trans     &kp SPACE     &kp BSPC     &trans     &kp TAB
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~  |     |     |  UP |     | VOL+ |   | NXT |  7  |  8  |  9  |     |  "  |
// |  `  |     | LFT | DWN | RHT | VOL- |   | PRV |  4  |  5  |  6  |     |  '  |
// |  =  |  ~  |  `  |  =  |  +  | MUTE |   |  0  |  1  |  2  |  3  |BTCLR|  +  |
//                    | RET |     | ESC |   | BSPC|     | TAB |
                        bindings = <
   &kp TILDE &trans    &trans    &kp UP    &trans    &kp C_VOL_UP     &kp C_NEXT &kp N7  &kp N8  &kp N9 &trans     &kp DQT
   &kp GRAVE &trans    &kp LEFT  &kp DOWN  &kp RIGHT &kp C_VOL_DN     &kp C_PREV &kp N4  &kp N5  &kp N6 &trans     &kp SQT
   &kp EQUAL &kp TILDE &kp GRAVE &kp EQUAL &kp PLUS  &kp C_MUTE       &kp N0     &kp N1  &kp N2  &kp N3 &bt BT_CLR &kp PLUS
                                 &kp RET    &trans   &kp ESC          &kp BSPC   &trans    &kp TAB
                        >;
                };
        };
};
